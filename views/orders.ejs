<%- include('./partials/header') %>

  <div class="px-6 py-10 min-h-screen bg-gray-50 max-w-5xl mx-auto">
    <h2 class="text-3xl font-bold mb-8 text-gray-800">📦 My Orders</h2>

    <% if (orders.length===0) { %>
      <div class="text-center py-20 bg-white shadow rounded">
        <img src="/images/no-orders.png" class="w-40 mx-auto mb-6" alt="No orders" />
        <p class="text-gray-600 mb-2 text-lg">No orders found.</p>
        <a href="/shop" class="text-blue-600 hover:underline">← Go to Shop</a>
      </div>
      <% } else { %>
        <div class="space-y-6">
          <% orders.forEach(order=> { %>
            <div
              class="border rounded-md p-5 shadow-sm <%= order.status === 'Cancelled' ? 'bg-gray-100 text-gray-500 line-through' : 'bg-white' %>"
              data-order-id="<%= order._id %>">

              <!-- 🆔 Order Info -->
              <div class="flex justify-between items-center mb-4">
                <div>
                  <p class="text-sm text-gray-500 font-mono">🆔 <%= order._id %>
                  </p>
                  <p class="text-xs text-gray-400">📅 <%= new Date(order.createdAt).toLocaleString() %>
                  </p>

                  <% if (order.paymentMethod) { %>
                    <p class="text-xs text-gray-600">
                      💳 Payment Mode: <%= order.paymentMethod === 'Razorpay' ? 'Online Payment' : order.paymentMethod %>
                    </p>
                    <% } %>

                      <% if (order.paymentStatus) { %>
                        <p
                          class="text-xs font-semibold <%= order.paymentStatus === 'Paid' ? 'text-green-600' : 'text-yellow-600' %>">
                          💰 Status: <%= order.paymentStatus %>
                        </p>
                        <% } %>
                </div>

                <span class="order-status px-3 py-1 rounded-full text-xs font-semibold
              <%= order.status === 'Paid' ? 'bg-green-100 text-green-700'
                : order.status === 'Shipped' ? 'bg-blue-100 text-blue-700'
                : order.status === 'Out for Delivery' ? 'bg-indigo-100 text-indigo-700'
                : order.status === 'Delivered' ? 'bg-green-100 text-green-700'
                : order.status === 'Cancelled' ? 'bg-red-100 text-red-600'
                : 'bg-yellow-100 text-yellow-800' %>">
                  <%= order.status %>
                </span>
              </div>

              <!-- 👜 Ordered Products -->
              <!-- 👜 Ordered Products -->
              <ul class="text-sm mb-3 space-y-1">
                <% order.products.forEach(item=> { %>
                  <li class="flex items-center gap-2">
                    <% if (item.snapshot && item.snapshot.image) { %>
                      <img src="<%= item.snapshot.image %>" alt="Product image"
                        class="w-10 h-10 object-contain border" />
                      <% } %>
                        <div>
                          👜 <span class="font-medium">
                            <%= item.snapshot.name %>
                          </span><br />
                          × <%= item.quantity %> — ₹ <%= item.snapshot.price %> each
                        </div>
                  </li>
                  <% }) %>
              </ul>


              <!-- 💸 Total -->
              <div class="text-right text-green-700 text-sm mb-3">
                <% 
    // Subtotal = Final Total + Coins Used
    const subtotal = order.products.reduce((sum, i) => sum + (i.snapshot.price * i.quantity), 0) + (order.coinsUsed || 0);
  %>

  <p class="text-gray-500">Subtotal: ₹ <%= subtotal %></p>

  
<% if (order.coinsUsed && order.coinsUsed > 0) { %>
  <p class="text-gray-600">🎁 Coins Used: -₹ <%= order.coinsUsed.toFixed(0) %></p>
<% } %>
<p class="font-bold text-green-700">Final Total: ₹ <%= order.totalAmount.toFixed(0) %></p>


  <% if (order.paymentMethod === "COD") { %>
    <p class="text-xs text-gray-500">You earned ≈ <%= Math.floor(order.totalAmount * 0.05) %> 🪙 on this order</p>
  <% } %>
              </div>

              <!-- 🏠 Delivery Address -->
              <% if (order.address) { %>
                <div class="mt-3 border-t pt-3 text-sm text-gray-700">
                  <p class="font-semibold mb-1">🏠 Delivery Address:</p>
                  <p>
                    <%= order.address.name %> (<%= order.address.phone %>)
                  </p>
                  <p>
                    <%= order.address.street %>, <%= order.address.city %> - <%= order.address.pincode %><br />
                          <%= order.address.state %>, <%= order.address.country %>
                  </p>
                  <% if (order.address.landmark) { %>
                    <p>📍 Landmark: <%= order.address.landmark %>
                    </p>
                    <% } %>
                </div>
                <% } %>

                  <!-- 🧭 Delivery Progress -->
                  <div class="mt-4">
                    <div class="flex justify-between text-xs text-gray-600 font-medium mb-1">
                      <span>Pending</span>
                      <span>Shipped</span>
                      <span>Out for Delivery</span>
                      <span>Delivered</span>
                    </div>
                    <div class="flex h-2 bg-gray-200 rounded overflow-hidden">
                      <% const statusSteps=['Pending', 'Shipped' , 'Out for Delivery' , 'Delivered' ]; %>
                        <% const currentStep=statusSteps.indexOf(order.status); %>
                          <% statusSteps.forEach((step, idx)=> { %>
                            <div
                              class="<%= idx <= currentStep ? 'bg-blue-500' : 'bg-gray-300' %> flex-1 transition-all duration-300 progress-step">
                            </div>
                            <% }) %>
                    </div>
                  </div>

                  <!-- ❌ Cancel Button -->
                  <% if (order.status==='Pending' ) { %>
                    <form action="/orders/cancel/<%= order._id %>" method="POST"
                      onsubmit="return confirm('Are you sure to cancel this order?');">
                      <button class="mt-3 text-red-600 hover:underline text-sm" type="submit">
                        Cancel Order
                      </button>
                    </form>
                    <% } %>

            </div>
            <% }) %>
        </div>
        <% } %>
  </div>

  <%- include('./partials/footer') %>

    <!-- 🔥 Socket.io client -->
    <script src="/socket.io/socket.io.js"></script>
    <script>
      const socket = io();

      // ✅ Toast notification system
      function showNotification(message) {
        const toast = document.createElement("div");
        toast.className =
          "fixed bottom-5 right-5 bg-black text-white px-4 py-2 rounded-lg shadow-lg z-50 animate-fade-in";
        toast.textContent = message;
        document.body.appendChild(toast);

        setTimeout(() => {
          toast.remove();
        }, 3000);
      }

      // Listen when a new order is placed
      socket.on("orderPlaced", (data) => {
        if (data.userId === "<%= user ? user._id : '' %>") {
          showNotification(data.message + " (Status: " + data.status + ")");
          location.reload(); // reload to show new order
        }
      });

      // Listen when an order status is updated
      socket.on("orderStatusUpdated", (data) => {
        const orderCard = document.querySelector(`[data-order-id='${data.orderId}']`);
        if (!orderCard) return;

        // Update status badge
        const statusBadge = orderCard.querySelector(".order-status");
        if (statusBadge) {
          statusBadge.textContent = data.status;
          statusBadge.className =
            "order-status px-3 py-1 rounded-full text-xs font-semibold " +
            (data.status === "Shipped" ? "bg-blue-100 text-blue-700"
              : data.status === "Out for Delivery" ? "bg-indigo-100 text-indigo-700"
                : data.status === "Delivered" ? "bg-green-100 text-green-700"
                  : data.status === "Cancelled" ? "bg-red-100 text-red-600"
                    : "bg-yellow-100 text-yellow-800");
        }

        // Update progress bar
        const progressSteps = ["Pending", "Shipped", "Out for Delivery", "Delivered"];
        const currentStep = progressSteps.indexOf(data.status);
        const progressBars = orderCard.querySelectorAll(".progress-step");

        progressBars.forEach((bar, idx) => {
          bar.className =
            (idx <= currentStep ? "bg-blue-500" : "bg-gray-300") +
            " flex-1 transition-all duration-300 progress-step";
        });

        // ✅ Show toast instead of alert
        showNotification("Order " + data.orderId + " is now " + (data.status || "updated"));
      });
    </script>

    <!-- 🔥 Simple fade-in animation for toast -->
    <style>
      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(20px);
        }

        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .animate-fade-in {
        animation: fadeIn 0.3s ease-out;
      }
    </style>